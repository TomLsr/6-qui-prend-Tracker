import { createClient } from '@supabase/supabase-js';

// The RLS policies for each table are defined in your Supabase project.
// The types below are generated by Supabase.
// You can replace them with your own.
// FIX: Added explicit Insert and Update types for each table in the Database interface.
// This resolves TypeScript errors where the Supabase client was inferring 'never' for insert() and update() method parameters.
export interface Database {
  public: {
    Tables: {
      players: {
        Row: {
          id: string;
          pseudo: string;
          avatar: string;
          isActive: boolean;
        };
        Insert: {
          id?: string;
          pseudo: string;
          avatar: string;
          isActive?: boolean;
        };
        Update: {
          id?: string;
          pseudo?: string;
          avatar?: string;
          isActive?: boolean;
        };
      };
      games: {
        Row: {
          id: string;
          date: string;
          winner_id?: string | null;
          loser_id?: string | null;
        };
        Insert: {
          id?: string;
          date: string;
          winner_id?: string | null;
          loser_id?: string | null;
        };
        Update: {
          id?: string;
          date?: string;
          winner_id?: string | null;
          loser_id?: string | null;
        };
      };
      game_players: {
        Row: {
          id: string;
          game_id: string;
          player_id: string;
          score: number;
          is_winner: boolean;
          is_loser: boolean;
        };
        Insert: {
          id?: string;
          game_id: string;
          player_id: string;
          score: number;
          is_winner?: boolean;
          is_loser?: boolean;
        };
        Update: {
          id?: string;
          game_id?: string;
          player_id?: string;
          score?: number;
          is_winner?: boolean;
          is_loser?: boolean;
        };
      };
    };
    Enums: {
      [_ in never]: never;
    };
    Functions: {
      [_ in never]: never;
    };
  };
}

// These tables are defined in your Supabase project.
// The types below are generated by Supabase.
// You can replace them with your own.
// FIX: Moved type aliases after the Database interface definition.
// This resolves a TypeScript issue where types for Supabase client operations were being inferred as 'never'
// because the `Database` interface was not fully defined when the aliases were being declared.
export type Tables<T extends keyof Database['public']['Tables']> =
  Database['public']['Tables'][T]['Row'];
export type Enums<T extends keyof Database['public']['Enums']> =
  Database['public']['Enums'][T];
export type Functions<T extends keyof Database['public']['Functions']> =
  Database['public']['Functions'][T]['Returns'];


const supabaseUrl = 'https://yunxxdmsejkclwwvaunj.supabase.co';
const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inl1bnh4ZG1zZWprY2x3d3ZhdW5qIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTc0OTI4ODQsImV4cCI6MjA3MzA2ODg4NH0.5hJTb87lekXmjRIXsR7EV5mEEwv51CjX8yR5YtmpEAQ';

export const supabase = createClient<Database>(supabaseUrl, supabaseAnonKey);
